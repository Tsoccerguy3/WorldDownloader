buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        jcenter()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
        classpath 'commons-io:commons-io:2.5'
        classpath 'com.googlecode.java-diff-utils:diffutils:1.3.0'
        classpath 'pokechu22.test.begradle:begradle:0.1.0@jar'
    }
}

apply plugin: 'java'

version = "4.0.0.6-SNAPSHOT"
group = "wdl"
archivesBaseName = "WorldDownloader"
libsDirName = "../../libs"

apply plugin: 'pokechu22.test.begradle'
apply plugin: 'pokechu22.test.customsrg'

minecraft {
    suppressMappingVersionWarnings = true
    version = "1.10"
    mappings = "snapshot_20170707"
    runDir = "run"
}

extraSrgs {
    add file('../srgs/EntityHorseToEquineEntity.srg')
    add file('../srgs/AnimalChestToContainerHorseChest.srg')
}

sourceSets {
    main {
        java {
            srcDir "src/main/java"
            srcDir project(':share').file("src/main/java")
        }
        resources {
            srcDir project(':share').file("src/main/resources")
        }
        base {
            baseClasses = [
                // Main hooks
                "net.minecraft.client.gui.GuiIngameMenu",
                "net.minecraft.client.multiplayer.WorldClient",
                "net.minecraft.client.network.NetHandlerPlayClient",
                // Auxiliary hooks, only needed for the base edit
                "net.minecraft.crash.CrashReport",
                "net.minecraft.client.ClientBrandRetriever",
                "net.minecraft.client.resources.DefaultResourcePack"
            ]
        }
    }
}

// Use tabs instead of spaces
fixMcSources {
    astyleConfig = "../astyle.cfg"
    // TEMPORARY, until I can figure out an automatic patch system.
    doFirst {
        def field = net.minecraftforge.gradle.tasks.PostDecompileTask.class.getDeclaredField('patchesMap')
        field.accessible = true
        field.get(fixMcSources).put('net.minecraft.entity.passive.EquineEntity.java', file('../srgs/EE_1.10.x.patch'))
    }
}

// TEMPORARY, until this is moved to begradle
processResources {
    rename { name ->
        if (name.endsWith(".lang")) {
            def index = name.indexOf("_")
            return name.substring(0, index) + name.substring(index, index + 3).toUpperCase() + ".lang"
        }
    }
}
