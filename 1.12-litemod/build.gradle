buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = 'sponge'
            url = 'http://repo.spongepowered.org/maven'
        }
        jcenter()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'commons-io:commons-io:2.5'
        classpath 'com.googlecode.java-diff-utils:diffutils:1.3.0'
        classpath 'pokechu22.test.begradle:begradle:0.1.4-SNAPSHOT@jar'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

apply plugin: 'java'

version = "4.0.2.1-SNAPSHOT"
group = "wdl"
archivesBaseName = "LiteModWDL"
libsDirName = "../../libs/${version}"

apply plugin: 'net.minecraftforge.gradle.liteloader'
apply plugin: 'pokechu22.test.customsrg'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'pokechu22.test.noinplacereobf'

repositories {
    maven {
        name = 'sponge'
        url = 'http://repo.spongepowered.org/maven'
    }
}

dependencies {
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'org.mockito:mockito-core:2.8.47'
    testCompile 'org.spongepowered:lwts:1.0.0'
    // Make sure that we have the Minecraft deps, at the correct versions
    testCompile configurations.forgeGradleMcDeps
}

minecraft {
    version = "1.12"
    mappings = "snapshot_20180719"
    runDir = "run"

    // We don't currently want a source jar (doesn't work well for base edits, and the version info doesn't work yet)
    makeObfSourceJar = false
}

extraSrgs {
    addSrg file('../srgs/AbstractHorseToEquineEntity.srg')
    addSrg file('../srgs/1.13.srg')
}

sourceSets {
    main {
        java {
            srcDir "src/main/java"
            srcDir project(':1.12').file("src/main/java")
            srcDir project(':share').file("src/main/java")
        }
        resources {
            srcDir "src/main/resources"
            srcDir project(':share').file("src/main/resources")
        }
        // Refmap declaration must match the refmap name specified in the json config
        ext.refMap = "mixins.LiteModWDL.refmap.json"
    }
    test {
        java {
            srcDir "src/test/java"
            srcDir project(':share').file("src/test/java")
        }
    }
    api {
        java {
            srcDir project(':share').file("src/api/java")
        }
    }
}

mixin {
    defaultObfuscationEnv notch
}

litemod {
    json {
        name = "LiteModWDL"
        displayName = "World Downloader for Liteloader"
        author = "uyjulian, pokechu22"
        mcversion = "1.12"
        mixinConfigs += "mixins.LiteModWDL.json"
        version = project.version
    }
}

// We want Java 8 where possible
tasks.withType(JavaCompile) { javaTask ->
    javaTask.sourceCompatibility = "1.8"
    javaTask.targetCompatibility = "1.8"
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

// Use tabs instead of spaces
fixMcSources {
    astyleConfig = "../astyle.cfg"
}

// Ensure that the API code and litemod JSON in the jar
jar {
    from sourceSets.api.output
    from litemod.outputs
}

test {
    systemProperty 'lwts.tweaker', 'wdl.lwts.WDLTestTweaker'

    // Run tests in a temporary directory
    workingDir = { test.temporaryDir }
}
